def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    //throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0.0'
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.firebase.crashlytics'

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 31
    buildToolsVersion '29.0.3'
    ndkVersion "22.0.7026061"


    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false //Insert this line
    }

    defaultConfig {
        applicationId "com.trimble.insite"
        minSdkVersion 20
        targetSdkVersion 31
        versionCode 214
        versionName '2.1.4'
    }

   signingConfigs {
    
       release {
           keyAlias keystoreProperties['keyAlias']
           keyPassword keystoreProperties['keyPassword']
           storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
           storePassword keystoreProperties['storePassword']
       }      
       debug {

       } 
   }
   
   buildTypes {
       release {
           signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
       }
       debug {
            signingConfig signingConfigs.debug
       }
   }

    flavorDimensions "flavors"
    productFlavors {
        visionlink {
            dimension "flavors"
            applicationIdSuffix ".visionlink"
            versionNameSuffix "-visionlink"
        }
        indiastack {
            dimension "flavors"
            applicationIdSuffix ".indiastack"
            versionNameSuffix "-indiastack"
        }
        worksiq {
            dimension "flavors"
            applicationIdSuffix ".worksiq"
            versionNameSuffix "-worksiq"
        }
        cummins{
             dimension "flavors"
            applicationIdSuffix ".cummins"
            versionNameSuffix "-cummins"
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation platform('com.google.firebase:firebase-bom:29.2.0')
    implementation 'com.google.firebase:firebase-crashlytics'
    
}